/* * Created on May 20, 2004 * */package mil.af.rl.jcat.processlibrary.signaldata;/** * @author John Lemmer *  * This class stores the probability, elicited from a modeler, that all the * signals in the (inherited) SignalSet, present together, but with no other * signals present, will cause (inhibit) the process owning this signal set. */import java.util.ArrayList;import java.util.List;import mil.af.rl.jcat.processlibrary.Library;import mil.af.rl.jcat.util.Guid;import org.dom4j.Document;import org.dom4j.Element;public class ElicitedProbability extends SignalSet{	private static final long serialVersionUID = -5589833648216194697L;	/**	 * elicitedProbability = <I>p </I>(owning process is active / [exactly]	 * SignalSet) as specified by the model builder	 */	private float elicitedProbability;	private String groupName = "";	public ElicitedProbability(float aProbability)	{		elicitedProbability = aProbability;	}	public ElicitedProbability(String name, float aProbability, SignalSet sigs)	{		if(name != null)			groupName = name;		elicitedProbability = aProbability;		this.addAll(sigs);	}	public List<Guid> getSignalSet()	{		ArrayList<Guid> array = new ArrayList<Guid>();		for(Object guid : toArray())		{			array.add((Guid) guid);		}		return array;	}	/**	 * Method for getting the value of elicitedProbability from this class.	 * 	 * @return Returns Elicited Probability	 */	public float getProbability()	{		return elicitedProbability;	}	/**	 * @param prob	 * Sets elicitedProbability	 */	public void setProbability(float prob)	{		elicitedProbability = prob;	}	public void setGroupName(String name)	{		groupName = name;	}	public String getGroupName()	{		return groupName;	}	public String toXML(String xml, Library lib)	{		xml += "<ElicitedProbability>";		xml = super.toXML(xml, lib);		xml += "<CausalProbability>" + elicitedProbability + "</CausalProbability>";		xml += "</ElicitedProbability>";		return xml;	}	public Document addToDocument(Document doc, Element el, Library lib)	{		Element sigs = el.addElement("ElicitedProbability");		sigs.addAttribute("causalprobability", Float.toString(elicitedProbability));		sigs.addAttribute("group-name", groupName);		doc = super.addToDocument(doc, sigs, lib);		return doc;	}}